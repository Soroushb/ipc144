Name: Soroush Bahrami	
Student Number: 152499182
Id: sbahrami7@myseneca.ca
Section: 144 NHH

Reflection:
Doing this week’s milestones, first, I learned how to use a header file, that is, how to write a separate code in another file, and insert its contents into the source file using #include. I practiced defining structures in that header file, and more importantly, how to define a string. I learned that defining the string is almost like defining an array, except that it has one extra element which is called “the null terminator”. I think the most important part of these 2 milestones was about formatted string input. I learned the difference between %s and %[\n], that is, %s, reads the characters until the first whitespace character, however, [%n], reads all the characters until the new line. I also learned how to clean the input buffer from one of the other students, and I found it very interesting. I used clear function in my code, but there was one other way of doing it, which is using space before the conversion specifier. I used the function because I thought it would be more professional and a good practice for using functions. 
Question 1. One efficient way that I can think of, is using arrays in structures. By that I mean, for instance, instead of defining “firstName”, “middleInitial” and “lastName” as separate members in the structure, since they all have the same type, we may use an array and store the inputs of that array. I’m not 100% sure if it works this way, but if it does, it simplifies our code. We can access our current structure members by using their index in the array.
Question 2. I think the difference between them is that string is a data structure that uses an array of characters. A character array, on the other hand, is just an array of characters. We use %s for null terminated strings, while we use %c for a symbol and character. I didn’t know this, but after searching it up, I learned that %s points to a memory location, while c is a character value, so it won’t work.
